/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTAave, NFTAaveInterface } from "../../Master.sol/NFTAave";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_loanToValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxAmount",
        type: "uint256",
      },
      {
        internalType: "enum NFTAave.InterestType",
        name: "_interestType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxDuration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_compound",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_collections",
        type: "address[]",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "getPoolById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum NFTAave.PoolStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "depositedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLiquidations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLoans",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLoanAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "enum NFTAave.InterestType",
            name: "interestType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "compound",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "collections",
            type: "address[]",
          },
        ],
        internalType: "struct NFTAave.Pool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getPoolByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum NFTAave.PoolStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "depositedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLiquidations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLoans",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLoanAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "enum NFTAave.InterestType",
            name: "interestType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "compound",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "collections",
            type: "address[]",
          },
        ],
        internalType: "struct NFTAave.Pool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108e0806100206000396000f3fe60806040526004361061004a5760003560e01c80630bc59b381461004f5780631703399214610085578063689e79251461009a578063865d049d146100ba578063ab3c7e5214610108575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610537565b61012c565b60405161007c91906105ce565b60405180910390f35b610098610093366004610745565b610300565b005b3480156100a657600080fd5b5061006f6100b5366004610861565b6103b4565b3480156100c657600080fd5b506100f06100d5366004610537565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b34801561011457600080fd5b5061011e60025481565b60405190815260200161007c565b610134610409565b6000828152600160209081526040808320546001600160a01b0390811684528383529281902081516102a081019092528054938416825290929091830190600160a01b900460ff16600281111561018d5761018d610550565b600281111561019e5761019e610550565b81526001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e083015260088301546101008301526009830154610120830152600a830154610140830152600b830154610160830152600c830154610180830152600d8301546101a0830152600e8301546101c0830152600f8301546101e09092019160ff169081111561025357610253610550565b600181111561026457610264610550565b815260200160108201548152602001601182015481526020016012820160009054906101000a900460ff16151515158152602001601382018054806020026020016040519081016040528092919081815260200182805480156102f057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102d2575b5050505050815250509050919050565b336000908152602081905260409020600d8101889055600e8101879055600f8101805487919060ff19166001838181111561033d5761033d610550565b0217905550601081018590556011810184905560128101805460ff1916841515179055815161037590601383019060208501906104bd565b5060028054600090815260016020526040812080546001600160a01b03191633179055815491906103a583610883565b91905055505050505050505050565b6103bc610409565b6001600160a01b038281166000908152602081815260409182902082516102a0810190935280549384168352919290830190600160a01b900460ff16600281111561018d5761018d610550565b604080516102a0810190915260008082526020820190815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000600181111561049957610499610550565b81526020016000815260200160008152602001600015158152602001606081525090565b828054828255906000526020600020908101928215610512579160200282015b8281111561051257825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906104dd565b5061051e929150610522565b5090565b5b8082111561051e5760008155600101610523565b60006020828403121561054957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061057657610576610550565b9052565b6002811061057657610576610550565b600081518084526020808501945080840160005b838110156105c35781516001600160a01b03168752958201959082019060010161059e565b509495945050505050565b602081526105e86020820183516001600160a01b03169052565b600060208301516105fc6040840182610566565b50604083015160608381019190915283015160808084019190915283015160a08084019190915283015160c08084019190915283015160e08084019190915283015161010080840191909152830151610120808401919091528301516101408084019190915283015161016080840191909152830151610180808401919091528301516101a0808401919091528301516101c0808401919091528301516101e080840191909152830151610200808401919091528301516102206106c28185018361057a565b840151610240848101919091528401516102608085019190915284015190506102806106f18185018315159052565b8401516102a084810152905061070b6102c084018261058a565b949350505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461074057600080fd5b919050565b600080600080600080600060e0888a03121561076057600080fd5b87359650602080890135965060408901356002811061077e57600080fd5b9550606089013594506080890135935060a089013580151581146107a157600080fd5b925060c089013567ffffffffffffffff808211156107be57600080fd5b818b0191508b601f8301126107d257600080fd5b8135818111156107e4576107e4610713565b8060051b604051601f19603f8301168101818110858211171561080957610809610713565b60405291825284820192508381018501918e83111561082757600080fd5b938501935b8285101561084c5761083d85610729565b8452938501939285019261082c565b80965050505050505092959891949750929550565b60006020828403121561087357600080fd5b61087c82610729565b9392505050565b6000600182016108a357634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122073bd0fc3af206cc632547d6698ea898e63c4b73547a4197e05ebacfccbaf2acc64736f6c63430008110033";

type NFTAaveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTAaveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTAave__factory extends ContractFactory {
  constructor(...args: NFTAaveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTAave> {
    return super.deploy(overrides || {}) as Promise<NFTAave>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTAave {
    return super.attach(address) as NFTAave;
  }
  override connect(signer: Signer): NFTAave__factory {
    return super.connect(signer) as NFTAave__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTAaveInterface {
    return new utils.Interface(_abi) as NFTAaveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTAave {
    return new Contract(address, _abi, signerOrProvider) as NFTAave;
  }
}
