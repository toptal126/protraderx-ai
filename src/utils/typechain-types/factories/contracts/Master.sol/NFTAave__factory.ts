/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTAave,
  NFTAaveInterface,
} from "../../../contracts/Master.sol/NFTAave";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_loanToValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxAmount",
        type: "uint256",
      },
      {
        internalType: "enum NFTAave.InterestType",
        name: "_interestType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxDuration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_compound",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "_collections",
        type: "address[]",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "getPoolById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum NFTAave.PoolStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "depositedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLiquidations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLoans",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLoanAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "enum NFTAave.InterestType",
            name: "interestType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "compound",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "collections",
            type: "address[]",
          },
        ],
        internalType: "struct NFTAave.Pool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getPoolByOwner",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum NFTAave.PoolStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "depositedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usableAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLiquidations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalLoans",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLoanAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "enum NFTAave.InterestType",
            name: "interestType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "compound",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "collections",
            type: "address[]",
          },
        ],
        internalType: "struct NFTAave.Pool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolOwners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "verifiedCollections",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "feeTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minDepositAmount",
            type: "uint256",
          },
        ],
        internalType: "struct NFTAave.AdminSetting",
        name: "_adminSetting",
        type: "tuple",
      },
    ],
    name: "updateAdminSetting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c158061007e6000396000f3fe6080604052600436106100865760003560e01c8063865d049d11610059578063865d049d1461010b5780638da5cb5b14610159578063ab3c7e5214610177578063ecc451581461019b578063f2fde38b146101bb57600080fd5b80630bc59b381461008b57806317033992146100c1578063689e7925146100d6578063715018a6146100f6575b600080fd5b34801561009757600080fd5b506100ab6100a63660046107b3565b6101db565b6040516100b8919061084a565b60405180910390f35b6100d46100cf366004610a63565b6103b0565b005b3480156100e257600080fd5b506100ab6100f1366004610af5565b61049a565b34801561010257600080fd5b506100d46104f1565b34801561011757600080fd5b506101416101263660046107b3565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100b8565b34801561016557600080fd5b506000546001600160a01b0316610141565b34801561018357600080fd5b5061018d60065481565b6040519081526020016100b8565b3480156101a757600080fd5b506100d46101b6366004610b17565b610505565b3480156101c757600080fd5b506100d46101d6366004610af5565b61055d565b6101e3610685565b6000828152600560209081526040808320546001600160a01b039081168452600483529281902081516102a081019092528054938416825290929091830190600160a01b900460ff16600281111561023d5761023d6107cc565b600281111561024e5761024e6107cc565b81526001828101546020830152600283015460408301526003830154606083015260048301546080830152600583015460a0830152600683015460c0830152600783015460e083015260088301546101008301526009830154610120830152600a830154610140830152600b830154610160830152600c830154610180830152600d8301546101a0830152600e8301546101c0830152600f8301546101e09092019160ff1690811115610303576103036107cc565b6001811115610314576103146107cc565b815260200160108201548152602001601182015481526020016012820160009054906101000a900460ff16151515158152602001601382018054806020026020016040519081016040528092919081815260200182805480156103a057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610382575b5050505050815250509050919050565b336000908152600460205260409020600d8101889055600e8101879055600f8101805487919060ff1916600183818111156103ed576103ed6107cc565b0217905550601081018590556011810184905560128101805460ff191684151517905581516104259060138301906020850190610739565b508054336001600160a01b03199182168117835534600184018190556003840181905560048401554260098401819055600a8401819055600b84015560068054600090815260056020526040812080549094169092179092558154919061048b83610bb8565b91905055505050505050505050565b6104a2610685565b6001600160a01b0382811660009081526004602090815260409182902082516102a0810190935280549384168352919290830190600160a01b900460ff16600281111561023d5761023d6107cc565b6104f96105db565b6105036000610635565b565b61050d6105db565b805180518291600191610527918391602090910190610739565b5060208201516001820180546001600160a01b0319166001600160a01b0390921691909117905560409091015160029091015550565b6105656105db565b6001600160a01b0381166105cf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105d881610635565b50565b6000546001600160a01b031633146105035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516102a08101909152600080825260208201908152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001811115610715576107156107cc565b81526020016000815260200160008152602001600015158152602001606081525090565b82805482825590600052602060002090810192821561078e579160200282015b8281111561078e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610759565b5061079a92915061079e565b5090565b5b8082111561079a576000815560010161079f565b6000602082840312156107c557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106107f2576107f26107cc565b9052565b600281106107f2576107f26107cc565b600081518084526020808501945080840160005b8381101561083f5781516001600160a01b03168752958201959082019060010161081a565b509495945050505050565b602081526108646020820183516001600160a01b03169052565b6000602083015161087860408401826107e2565b50604083015160608381019190915283015160808084019190915283015160a08084019190915283015160c08084019190915283015160e08084019190915283015161010080840191909152830151610120808401919091528301516101408084019190915283015161016080840191909152830151610180808401919091528301516101a0808401919091528301516101c0808401919091528301516101e0808401919091528301516102008084019190915283015161022061093e818501836107f6565b8401516102408481019190915284015161026080850191909152840151905061028061096d8185018315159052565b8401516102a08481015290506109876102c0840182610806565b949350505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146109bc57600080fd5b919050565b600082601f8301126109d257600080fd5b8135602067ffffffffffffffff808311156109ef576109ef61098f565b8260051b604051601f19603f83011681018181108482111715610a1457610a1461098f565b604052938452858101830193838101925087851115610a3257600080fd5b83870191505b84821015610a5857610a49826109a5565b83529183019190830190610a38565b979650505050505050565b600080600080600080600060e0888a031215610a7e57600080fd5b8735965060208801359550604088013560028110610a9b57600080fd5b9450606088013593506080880135925060a08801358015158114610abe57600080fd5b915060c088013567ffffffffffffffff811115610ada57600080fd5b610ae68a828b016109c1565b91505092959891949750929550565b600060208284031215610b0757600080fd5b610b10826109a5565b9392505050565b600060208284031215610b2957600080fd5b813567ffffffffffffffff80821115610b4157600080fd5b9083019060608286031215610b5557600080fd5b604051606081018181108382111715610b7057610b7061098f565b604052823582811115610b8257600080fd5b610b8e878286016109c1565b825250610b9d602084016109a5565b60208201526040830135604082015280935050505092915050565b600060018201610bd857634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122076e69cda8b46435ed85af1e75cfcedb4d197133bdd9ff6906211785d80e9268e64736f6c63430008110033";

type NFTAaveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTAaveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTAave__factory extends ContractFactory {
  constructor(...args: NFTAaveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTAave> {
    return super.deploy(overrides || {}) as Promise<NFTAave>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTAave {
    return super.attach(address) as NFTAave;
  }
  override connect(signer: Signer): NFTAave__factory {
    return super.connect(signer) as NFTAave__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTAaveInterface {
    return new utils.Interface(_abi) as NFTAaveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTAave {
    return new Contract(address, _abi, signerOrProvider) as NFTAave;
  }
}
